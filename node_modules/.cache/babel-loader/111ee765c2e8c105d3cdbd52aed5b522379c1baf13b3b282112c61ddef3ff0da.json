{"ast":null,"code":"var _jsxFileName = \"/home/mrjava/Documents/Programming/Hackaton/tuitpress-client/react-redux-application/src/components/login.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Input } from '../ui';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { signUserFailure, signUserStart, signUserSuccess } from '../slice/auth';\nimport AuthService from '../service/auth';\nimport { ValidationError } from './';\nimport { useNavigate } from 'react-router-dom';\nimport icon from \"../Logo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const {\n    isLoading,\n    loggedIn\n  } = useSelector(state => state.auth);\n  const navigate = useNavigate();\n  const loginHandler = async e => {\n    e.preventDefault();\n    dispatch(signUserStart());\n    const user = {\n      email,\n      password\n    };\n    try {\n      const response = await AuthService.userLogin(user);\n      dispatch(signUserSuccess(response.user));\n      navigate('/');\n    } catch (error) {\n      dispatch(signUserFailure(error.response.data.errors));\n    }\n  };\n  useEffect(() => {\n    if (loggedIn) {\n      navigate('/');\n    }\n  }, [loggedIn]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"form-signin w-25 m-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"mb-2\",\n          src: icon,\n          alt: \"\",\n          width: \"72\",\n          height: \"60\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"h3 mb-3 fw-normal\",\n          children: \"Please login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ValidationError, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          label: 'Email address',\n          state: email,\n          setState: setEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          label: 'Password',\n          type: 'password',\n          state: password,\n          setState: setPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"w-100 btn btn-lg btn-primary mt-2\",\n          disabled: isLoading,\n          onClick: loginHandler,\n          type: \"submit\",\n          children: isLoading ? 'loading...' : 'Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this);\n};\n_s(Login, \"Ys9o3YyWGkcMW/2n/UHoTY3q2iQ=\", false, function () {\n  return [useDispatch, useSelector, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useEffect","useState","Input","useSelector","useDispatch","signUserFailure","signUserStart","signUserSuccess","AuthService","ValidationError","useNavigate","icon","Login","email","setEmail","password","setPassword","dispatch","isLoading","loggedIn","state","auth","navigate","loginHandler","e","preventDefault","user","response","userLogin","error","data","errors"],"sources":["/home/mrjava/Documents/Programming/Hackaton/tuitpress-client/react-redux-application/src/components/login.jsx"],"sourcesContent":["import {useEffect, useState} from 'react'\nimport {Input} from '../ui'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {signUserFailure, signUserStart, signUserSuccess} from '../slice/auth'\nimport AuthService from '../service/auth'\nimport {ValidationError} from './'\nimport {useNavigate} from 'react-router-dom'\nimport icon from \"../Logo.png\";\n\nconst Login = () => {\n\tconst [email, setEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n\tconst dispatch = useDispatch()\n\tconst {isLoading, loggedIn} = useSelector(state => state.auth)\n\tconst navigate = useNavigate()\n\n\tconst loginHandler = async e => {\n\t\te.preventDefault()\n\t\tdispatch(signUserStart())\n\t\tconst user = {email, password}\n\t\ttry {\n\t\t\tconst response = await AuthService.userLogin(user)\n\t\t\tdispatch(signUserSuccess(response.user))\n\t\t\tnavigate('/')\n\t\t} catch (error) {\n\t\t\tdispatch(signUserFailure(error.response.data.errors))\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tif (loggedIn) {\n\t\t\tnavigate('/')\n\t\t}\n\t}, [loggedIn])\n\n\treturn (\n\t\t<div className='text-center mt-5'>\n\t\t\t<main className='form-signin w-25 m-auto'>\n\t\t\t\t<form>\n\t\t\t\t\t<img className='mb-2' src={icon} alt='' width='72' height='60' />\n\t\t\t\t\t<h1 className='h3 mb-3 fw-normal'>Please login</h1>\n\t\t\t\t\t<ValidationError />\n\n\t\t\t\t\t<Input label={'Email address'} state={email} setState={setEmail} />\n\t\t\t\t\t<Input label={'Password'} type={'password'} state={password} setState={setPassword} />\n\n\t\t\t\t\t<button className='w-100 btn btn-lg btn-primary mt-2' disabled={isLoading} onClick={loginHandler} type='submit'>\n\t\t\t\t\t\t{isLoading ? 'loading...' : 'Login'}\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t</main>\n\t\t</div>\n\t)\n}\n\nexport default Login\n"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,SAAQC,KAAK,QAAO,OAAO;AAC3B,SAAQC,WAAW,EAAEC,WAAW,QAAO,aAAa;AACpD,SAAQC,eAAe,EAAEC,aAAa,EAAEC,eAAe,QAAO,eAAe;AAC7E,OAAOC,WAAW,MAAM,iBAAiB;AACzC,SAAQC,eAAe,QAAO,IAAI;AAClC,SAAQC,WAAW,QAAO,kBAAkB;AAC5C,OAAOC,IAAI,MAAM,aAAa;AAAC;AAE/B,MAAMC,KAAK,GAAG,MAAM;EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMgB,QAAQ,GAAGb,WAAW,EAAE;EAC9B,MAAM;IAACc,SAAS;IAAEC;EAAQ,CAAC,GAAGhB,WAAW,CAACiB,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC;EAC9D,MAAMC,QAAQ,GAAGZ,WAAW,EAAE;EAE9B,MAAMa,YAAY,GAAG,MAAMC,CAAC,IAAI;IAC/BA,CAAC,CAACC,cAAc,EAAE;IAClBR,QAAQ,CAACX,aAAa,EAAE,CAAC;IACzB,MAAMoB,IAAI,GAAG;MAACb,KAAK;MAAEE;IAAQ,CAAC;IAC9B,IAAI;MACH,MAAMY,QAAQ,GAAG,MAAMnB,WAAW,CAACoB,SAAS,CAACF,IAAI,CAAC;MAClDT,QAAQ,CAACV,eAAe,CAACoB,QAAQ,CAACD,IAAI,CAAC,CAAC;MACxCJ,QAAQ,CAAC,GAAG,CAAC;IACd,CAAC,CAAC,OAAOO,KAAK,EAAE;MACfZ,QAAQ,CAACZ,eAAe,CAACwB,KAAK,CAACF,QAAQ,CAACG,IAAI,CAACC,MAAM,CAAC,CAAC;IACtD;EACD,CAAC;EAED/B,SAAS,CAAC,MAAM;IACf,IAAImB,QAAQ,EAAE;MACbG,QAAQ,CAAC,GAAG,CAAC;IACd;EACD,CAAC,EAAE,CAACH,QAAQ,CAAC,CAAC;EAEd,oBACC;IAAK,SAAS,EAAC,kBAAkB;IAAA,uBAChC;MAAM,SAAS,EAAC,yBAAyB;MAAA,uBACxC;QAAA,wBACC;UAAK,SAAS,EAAC,MAAM;UAAC,GAAG,EAAER,IAAK;UAAC,GAAG,EAAC,EAAE;UAAC,KAAK,EAAC,IAAI;UAAC,MAAM,EAAC;QAAI;UAAA;UAAA;UAAA;QAAA,QAAG,eACjE;UAAI,SAAS,EAAC,mBAAmB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAkB,eACnD,QAAC,eAAe;UAAA;UAAA;UAAA;QAAA,QAAG,eAEnB,QAAC,KAAK;UAAC,KAAK,EAAE,eAAgB;UAAC,KAAK,EAAEE,KAAM;UAAC,QAAQ,EAAEC;QAAS;UAAA;UAAA;UAAA;QAAA,QAAG,eACnE,QAAC,KAAK;UAAC,KAAK,EAAE,UAAW;UAAC,IAAI,EAAE,UAAW;UAAC,KAAK,EAAEC,QAAS;UAAC,QAAQ,EAAEC;QAAY;UAAA;UAAA;UAAA;QAAA,QAAG,eAEtF;UAAQ,SAAS,EAAC,mCAAmC;UAAC,QAAQ,EAAEE,SAAU;UAAC,OAAO,EAAEK,YAAa;UAAC,IAAI,EAAC,QAAQ;UAAA,UAC7GL,SAAS,GAAG,YAAY,GAAG;QAAO;UAAA;UAAA;UAAA;QAAA,QAC3B;MAAA;QAAA;QAAA;QAAA;MAAA;IACH;MAAA;MAAA;MAAA;IAAA;EACD;IAAA;IAAA;IAAA;EAAA,QACF;AAER,CAAC;AAAA,GA5CKN,KAAK;EAAA,QAGOR,WAAW,EACED,WAAW,EACxBO,WAAW;AAAA;AAAA,KALvBE,KAAK;AA8CX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}